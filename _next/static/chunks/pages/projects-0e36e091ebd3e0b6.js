(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[327],{7670:function(e,s,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/projects",function(){return i(9429)}])},4852:function(e,s,i){"use strict";var n=i(5893);i(7294);var a=i(9008),r=i.n(a);s.Z=e=>{let{tabName:s}=e;return(0,n.jsxs)(r(),{children:[(0,n.jsxs)("title",{children:["Kevin Wu | ",s]}),(0,n.jsx)("link",{rel:"apple-touch-icon",sizes:"180x180",href:"images/apple-touch-icon.png"}),(0,n.jsx)("link",{rel:"icon",type:"image/png",sizes:"32x32",href:"images/favicon-32x32.png"}),(0,n.jsx)("link",{rel:"icon",type:"image/png",sizes:"16x16",href:"images/favicon-16x16.png"})]})}},9429:function(e,s,i){"use strict";i.r(s),i.d(s,{default:function(){return r}});var n=i(5893),a=i(4852);function r(){return(0,n.jsxs)("div",{className:"container",children:[(0,n.jsx)(a.Z,{tabName:"Projects"}),(0,n.jsxs)("div",{className:"row",children:[(0,n.jsxs)("div",{className:"project-title",children:[(0,n.jsx)("h1",{children:"Projects"}),(0,n.jsx)("p",{children:"Some cool projects that I've worked on in the past."})]}),(0,n.jsxs)("div",{className:"project-individual",children:[(0,n.jsxs)("div",{className:"row",children:[(0,n.jsx)("div",{className:"one-half column",children:(0,n.jsx)("h3",{children:(0,n.jsx)("u",{children:(0,n.jsx)("a",{href:"https://github.com/ypwk/DecoderVIS",target:"_blank",children:"DecoderVIS"})})})}),(0,n.jsx)("div",{className:"one-half column",children:(0,n.jsx)("h5",{className:"u-pull-right",children:"April 2023"})})]}),(0,n.jsx)("div",{className:"row",children:(0,n.jsx)("p",{children:"A visualizer for surface code error syndrome decoding written in C++. Current version supports MWPM decoding for the rotated planar code for various odd distances."})}),(0,n.jsx)("div",{className:"row",children:(0,n.jsx)("p",{children:"Includes a custom 2D rendering engine written using GLFW and GLM. Uses Hello ImGUI for user interface purposes, and LEMON for graph theoretic algorithms."})})]}),(0,n.jsxs)("div",{className:"project-individual",children:[(0,n.jsxs)("div",{className:"row",children:[(0,n.jsx)("div",{className:"one-half column",children:(0,n.jsx)("h3",{children:(0,n.jsx)("u",{children:(0,n.jsx)("a",{href:"https://github.com/K-L-Chen/WM_Dahlgren_Challenge",target:"_blank",children:"1st AI/ML Challenge @ Dahlgren"})})})}),(0,n.jsx)("div",{className:"one-half column",children:(0,n.jsx)("h5",{className:"u-pull-right",children:"March 2023"})})]}),(0,n.jsx)("div",{className:"row",children:(0,n.jsxs)("p",{children:["I was a member of the William & Mary team invited by"," ",(0,n.jsx)("u",{children:(0,n.jsx)("a",{href:"https://www.navsea.navy.mil/Home/Warfare-Centers/NSWC-Dahlgren/",target:"_blank",children:"NSWCDD"})})," ","to participate in the 1st Artificial Intelligence and Machine Learning Challenge at Dahlgren. There, I developed cutting-edge AI/ML algorithms for automating the scheduling and coordination of advanced weapon systems, competing against teams from other colleges."]})}),(0,n.jsx)("div",{className:"row",children:(0,n.jsx)("p",{children:"We experimented with approaches utilizing deep learning, reinforcement learning, and genetic algorithms."})}),(0,n.jsx)("div",{className:"row",children:(0,n.jsx)("p",{children:"The W&M team won third place and $20k in prize money."})})]}),(0,n.jsxs)("div",{className:"project-individual",children:[(0,n.jsxs)("div",{className:"row",children:[(0,n.jsx)("div",{className:"one-half column",children:(0,n.jsx)("h3",{children:(0,n.jsx)("u",{children:(0,n.jsx)("a",{href:"https://github.com/ypwk/Mimir",target:"_blank",children:"Mimir"})})})}),(0,n.jsx)("div",{className:"one-half column",children:(0,n.jsx)("h5",{className:"u-pull-right",children:"April 2023"})})]}),(0,n.jsxs)("div",{className:"row",children:[(0,n.jsx)("p",{children:"A sentential logic proof generator. When given an objective statement and a set of premises, will output steps used to prove the objective statement."}),(0,n.jsx)("p",{children:"Utilizes AWS Amplify for hosting and AWS API Gateway for backend infrastructure. The frontend was written in React, and the backend proof generator was written in Python and hosted using AWS Lambda."}),(0,n.jsx)("p",{children:"Created for Cypher VIII, William & Mary's Hackathon. Won best UI."})]})]}),(0,n.jsxs)("div",{className:"project-individual",children:[(0,n.jsxs)("div",{className:"row",children:[(0,n.jsx)("div",{className:"one-half column",children:(0,n.jsx)("h3",{children:"Maze Game"})}),(0,n.jsx)("div",{className:"one-half column",children:(0,n.jsx)("h5",{className:"u-pull-right",children:"December 2021"})})]}),(0,n.jsxs)("div",{className:"row",children:[(0,n.jsx)("p",{children:"Maze game written using the Android SDK that included maze generation and automated gameplay."}),(0,n.jsx)("p",{children:"Maze generation was done using a selection from a set of Minimum Spanning Tree algorithms (e.g. Prim, Borouvka, Depth First Search). Automated exploration was done with differing pathfinding algorithms and virtual agents (robots), some with reduced vision or movement capabilities."}),(0,n.jsx)("p",{children:"As this was an extension of a class project assigned every semester, I will not disclose the source code."})]})]}),(0,n.jsxs)("div",{className:"project-individual",children:[(0,n.jsxs)("div",{className:"row",children:[(0,n.jsx)("div",{className:"one-half column",children:(0,n.jsx)("h3",{children:"2048 AI"})}),(0,n.jsx)("div",{className:"one-half column",children:(0,n.jsx)("h5",{className:"u-pull-right",children:"September 2021"})})]}),(0,n.jsxs)("div",{className:"row",children:[(0,n.jsx)("p",{children:"2048 clone written in Java, complete with a decision-making AI that can beat the game."}),(0,n.jsx)("p",{children:"There are two automated players bundled with this project, a Random Player that makes random choices, and a Smart Player that makes choices based on a set of heuristics."}),(0,n.jsx)("p",{children:"At each step during execution, the Smart Player calculates a score for the respective up, down, right, and left movements and chooses the highest score."}),(0,n.jsx)("p",{children:"To improve performance on my slow laptop, the Smart Player utilizes a dynamic recursive depth to “think more” when it is in trouble. The more empty tiles there are, the less steps it thinks ahead, and vice versa."}),(0,n.jsx)("p",{children:"As this was an extension of a class project assigned every semester, I will not disclose the source code."})]})]}),(0,n.jsxs)("div",{className:"project-individual",children:[(0,n.jsxs)("div",{className:"row",children:[(0,n.jsx)("div",{className:"one-half column",children:(0,n.jsx)("h3",{children:(0,n.jsx)("u",{children:(0,n.jsx)("a",{href:"https://github.com/ypwk/shihelper",target:"_blank",children:"ShiHelper"})})})}),(0,n.jsx)("div",{className:"one-half column",children:(0,n.jsx)("h5",{className:"u-pull-right",children:"April 2021"})})]}),(0,n.jsx)("div",{className:"row",children:(0,n.jsx)("p",{children:"A specialized text editor created using React to aid in analysis and composition of Chinese regulated-verse poetry. Included annotations for English, Middle Chinese, and Mandarin. See the link for more information."})})]})]})]})}},9008:function(e,s,i){e.exports=i(4764)}},function(e){e.O(0,[774,888,179],function(){return e(e.s=7670)}),_N_E=e.O()}]);